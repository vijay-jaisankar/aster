#include <bits/stdc++.h>
#include <string>
using namespace std;

#ifndef STRUCTS_H
#define STRUCTS_H

// Encoding for Token Types
enum {
     KW=1, ID, STR, NUM, HDR, COMM,

    NOT=10, BITWISE_AND, BITWISE_NOT, BITWISE_XOR, MULTIPLICATION, DIVISION, MODULO, ADDITION, SUBTRACTION, 
    LESS_THAN, GREATER_THAN, EQUAL, BITWISE_OR, QUESTION, COLON, SEMICOLON, COMMA, DOT, 
    LEFT_SQUARE_BRACKET, RIGHT_SQUARE_BRACKET, LEFT_PARENTHESIS, RIGHT_PARENTHESIS,
    LEFT_CURLY_BRACKET, RIGHT_CURLY_BRACKET, POINTER, INCREMENT, DECREMENT,
    LEFT_SHIFT, RIGHT_SHIFT, LESS_THAN_OR_EQUAL, GREATER_THAN_OR_EQUAL,
    EQUAL_TO, NOT_EQUAL, AND, OR, ADDITION_EQUAL, SUBTRACTION_EQUAL,
    MULTIPLICATION_EQUAL, DIVISION_EQUAL, MODULO_EQUAL, BITWISE_AND_EQUAL,
    BITWISE_XOR_EQUAL, BITWISE_OR_EQUAL, BITWISE_NOT_EQUAL, ERROR, END_OF_TEXT
};


// Token Properties
struct token{
    int type;
    string lexeme;
};


#endif